import sin from math
class Crosshair extends MODULE
  EyeMat: Material "dysphoria/ui/icons/sotla/1.png", "ignorez"

  CrossShadowDist:  0
  CrossShadowPos:   Vector 0, 0, 0

  PostDrawTranslucentRenderables: =>
    ply = LocalPlayer!
    return unless ply\Alive!

    render.SetMaterial @EyeMat
    tr = ply\GetEyeTrace!
    @CrossShadowPos = LerpVector 0.1, @CrossShadowPos, tr.HitPos

    rot = if tr.HitNormal.z == 1
      ply\GetAngles!.y
    else
      180

    size = 8 - 1 * TimedSin(0.4, 0, 1, 1)

    rgb = HSVToColor( CurTime() * 23 % 360, 1, 1 )
    rgb.a = 180

    render.DrawQuadEasy tr.HitPos + Vector(1,1,1) * tr.HitNormal, tr.HitNormal, size, size, rgb, rot
    @CrossShadowDist = Lerp 0.02, @CrossShadowDist, 1
    for i=1, 3
      dist = @CrossShadowDist * i
      if dist < 3
        s = size + dist
        c = ColorAlpha rgb, rgb.a - (rgb.a/3 * dist)
        r = rot + (dist * 10 * sin(CurTime!))
        p = LerpVector( 1 - (0.3 * i), @CrossShadowPos, tr.HitPos )
        p = p + Vector(1+dist,1+dist,1+dist) * tr.HitNormal
        render.DrawQuadEasy p, tr.HitNormal, s, s, c, r

  PreDrawHalos: =>
    tr = LocalPlayer!\GetInteractTrace!
    highlighted = tr.Entity
    if IsValid highlighted
      color = HSVToColor ( CurTime! * 23 ) % 360, 1, 1
      halo.Add { highlighted }, color, math.sin( CurTime! ), math.cos( CurTime! ), 2, true
