#+TITLE: Cursed Changelog
#+AUTHOR: Sotla
#+LAST_EDIT: <2024-11-12 Tue 13:04 EST>
:setup:
#+SETUPFILE: setup-org-theme.org
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="death.css" />
#+HTML_HEAD: <meta content="Eclipse: Cursed Changelog" property="og:title" />
#+HTML_HEAD: <meta content="How did we fuck things up this time?" property="og:description" />
#+HTML_HEAD: <meta content="https://death.town/~corpse" property="og:url" />
#+HTML_HEAD: <meta content="https://death.town/~corpse/images/sotla.png" property="og:image" />
#+HTML_HEAD: <meta content="#FF0000" data-react-helmet="true" name="theme-color" />
#+OPTIONS: author:nil date:nil timestamp:nil num:nil toc:nil
:end:

*This is where we reflect on the terrible things we've done.*

This is not where we post our [[https://death.town/~corpse/war-journal.html][intrusive thoughts]].

[[file:index.html][TAKE ME BACK]]
* October 2024
** <2024-10-26 Sat>
*** "Mmm. Soup."
The first of cooking is implemented; making soup in a barebones manner.
How do I make it?
- Get a soup pot and at least one bowl.
- Fill the pot with four of any food-type things.
- For now, simply using the pot in your hand will 'cook' the soup. That will hopefully not be the case for long.
- Brilliant! You've made soup. It inherits a ll the nutritial value from its ingredients, is more hydrating, less poisonous and stretches further.
- Use a bowl on the pot to take a serving. Each serving contains one of each status value, positive or negative. The soup will stretch for as long as there are still status values left within.
** <2024-10-14 Mon>
Hey. Yes, you. Who the fuck do you /think/ I'm talking to?

You should look at the [[https://death.town/~corpse/controls.html][controls page]] again.
*** "Fucking finally! I've been starving to death! LITERALLY TO DEATH"
A revolutionary change -- ~KEY_Z~ can now be used to drop, throw, and place items in left hand.
Use it just like you use ~KEY_X~, it has the same interations as ~KEY_X~ does.

*** "It has pockets!"
You can now pocket items by holding ~KEY_Z~ or ~KEY_X~ respectively and then pressing ~KEY_1~ through ~KEY_4~. This does not show the item on your model.
** <2024-10-03 Thu>
*** "What a handy place to put my gun!"
You can now press ~KEY_H~ to Holster, and press it again with an empty hand to Unholster. This is our first foray into creating player inventories, which will be very important in the final game.

Observe the [[youtube:GliZChPuupg][development footage]].
*** "Probably shouldn't fuck with that guy."
Holstered items are now displayed on your character model for all to see.
*** "He's rotting, you know."
Rotting corpses emit horrible miasma.

Visual only for just now.
**** "CATCH!"
Things made of an element with the 'shatter' attribute break on hard impact. The entity they hit is hurt dependant on the thing's size.

Basically, you can throw glass bottles at people to kill them.
** <2024-10-01 Tue>
*** "They're blocking my screen!"
Added a variety of bottles and cans as THINGs.
*** "Oh god- he's dead!"
In fixing a bug that occured when a tumbled player disconnected we realized we could just kill the player the moment before they disconnect.

This resolves the bug and the immersion-ruining moment where someone abruptly vanishes. They just keel over and die.
*** "See what I have to say."
Speech bubbles now follow their point of origin, whether player or object. They also slowly rise above the player's head to displace them based on time.

You can see your own speech bubbles above your crosshair, backed in grey rather than black to distinguish them from others' words.
*** "I can't speak today."
Added text stuttering, like in Nightmare 3. Makes it harder to read some things, like the chatter of a broken radio.
*** "I won't misplace your novoluger again, I promise!"
Holding ~KEY_X~ now shows a ghost of where your held item would be placed if you used ~MOUSE_LEFT~. It's not the best right now, but it's late when we're writing this and we'll make it better tomorrow.
* September 2024
** <2024-09-30 Mon>
*** "Fu...sion-HAAA!"
You can now press ~KEY_C~ to combine the items in your primary and off hands.

For now, its primary uses are to consolidate stacking items, and to load magazines into guns without putting them on the floor.

In the future, you'll be able to use this to do simple crafting.
*** "My hands and my brain work together."
The name of the item you are holding is displayed in the appropriate bottom corner of the screen, left or right.
** <2024-09-29 Sun>
*** "That looks way less dumb."
Standing up from a fallen stance will play more appropriate, human animations.

For the undead we can continue to use the (faster) zombie animations for getting up, which were previously used for all characters.
*** "That looks WAY less dumb."
Just like from the old Alchemy demos, firearms now have tracers.

They look a bit cartoony and Grand Theft Auto 5-like but they're better than nothing, and especially important when bullets leave through the muzzle of your gun and not your eyes.
** <2024-09-24 Tue>
*** "Sounds fine to me."
Things can have their impact and attack sounds set automatically dependant on both element, then size.

This will save time in future and make things made of elements sound fitting.

For example, a wooden bat will sound wooden and a metal bat will sound metal. So interesting.
*** "Wow, I can look at them!"
Basic TargetID functionality from Alchemy was ported back into Eclipse.

See it [[youtube:fVurAtv5ppw][here]].
*** "Ooh, pretty."
Objects nearer to your crosshair will be highlighted with a color-cycling halo.

This, and a more forgiving 'range' to detect objects with, should make it easier to interact with the world.
*** "Don't shoot! I have bones!"
Guns can finally shoot real bullets instead of pretend ones; For the time being, they only do 10 damage, but later we'll be able to change damage depending on the gun and caliber.

Unlike some other games, these guns fire from the muzzle rather than your character's eyes.
*** "Uh oh, my hands are full."
Switching items between hands is now significantly improved. Before, an item occupying one hand would block an item in another hand from changing which hand it was held in; This was fixed terribly by moving the blocking item into the world for 0.1 seconds while the transfer was made. Now, items actually swap between the two hands simultaneously, with no blocking.
*** "You load 15 rounds, and what do you get?"
Guns now have magazines, which are loaded by using ~MOUSE_LEFT~ on them while holding an ammo box (Currently, this can only be done one bullet at a time). The magazine can then be loaded into a gun with the same maneuver.

You can also remove a magazine from a gun by holding ~MOUSE_RIGHT~ and pressing ~KEY_R~ with a gun in your primary hand.

In the future, you will be able to do all of this in your hands without dropping anything in the world.
*** "Lay that pistol down."
Guns fire if they impact surfaces too hard; At some point we'll add recoil so they bounce around after they fire, and make it so they don't hop around and dump their whole mag in the process.
** <2024-09-19 Thu>
*** "Liver Failure Forever!"
Radios were added that occasionally bark out the Kommandant's great achievements and citizen reminders.

*** "This sucks."
Every thing now has a durability, affected by the element it's made of.

Flamable elements (currently only wood) ignite when taking burn damage, with the chance and intensity depending on the element's flamability.
** <2024-09-17 Tue>
*** "Now I don't look as stupid as I really am."
You can no longer turn with the mouse if you are performing an immobilizing act.

This includes shoving, kicking, and standing up.
** <2024-09-16 Mon>
*** "Things made of +Stuff+ Elements!"
Things can now be made of various materials, which we are calling elements.

For example, a crowbar could be made of flimsy copper, reinforced steel or brittle wood.

The element a thing is made from affects:
- Sharp damage
- Blunt damage
- Swing delay
- Throw distance
- Texture applied
- Colour applied
- Durability (currently unused)
- Flamability (currently unused)

There's no way to set these currently besides our magic wand, but this will allow for greater mechanical depth.
Elements have attributes to allow things to decide what elements they can be made of. This is not for practicality, but believability - you can make a sledgehammer out of glass if you /really/ want to, but you cannot make a table out of leather.
Thanks to yuescript's OOP new elements are incredibly easy to create.
*** "That was there the whole time?"
An issue with how we were predicting animation sequences caused things to look /wrong/ for the player's perception of themselves.

Thankfully the simple fix to this problem is applicable everywhere it appears in the game.
*** "Oh no! AI is invading my favorite game!"
Bots were given basic functionality. Their behavioral thought sequence is described below.

- If I do not have a target, locate one.
  - Seek a weapon first. It must not be too far away and visible to me.
  - If I cannot find a weapon, seek a person. They will become my friend.
- If I found a target, approach it.
  - If my target is an acceptable weapon, pick it up when I can reach it.
  - If my target is my friend, follow and maintain a respectful distance.
  - If my target is my enemy, prepare for attack and close in.
- I trust my friends.
  - If my target is my friend, I feel safe enough to try locating a weapon during the peace.
- I will destroy my enemies.
  - When my enemies die, I will lose my opinion of them. We may become friends again.
  - I will use my weapon if I have one. If I don't, I will sometimes shove my enemy.
- Anyone who hurts me is my enemy.

Whether or not this will be utilized for any purpose constructive for the end user's gameplay, or remain a curiosity of development/debugging features, remains a mystery.
** <2024-09-15 Sun>
*** "Makes more sense like this."
Like in +Extreme Football Throwdown+ Fucked Up Football, shoving/kicking/melee attacks can strike more than one target if they're close enough together. More importantly, melee weapons no longer /only/ hit precisely where your crosshair happens to be; this makes hit detection more forgiving in a manner that helps the game rather than make it 'too easy'.

Punching still only hits one target at a time.
*** "Finally, now I realize."
The old speed meter from Alchemy was ported.

Now you can see what your desired target speed is, in comparison to your real speed.
*** "Look at this corpse I found."
Holding a body will display you as holding both arms out to grab it with.
*** "It took long enough."
When you are done standing up, you will now become unstuck if your body would have you get up in a position where you would be trapped in level geometry.
*** "Yay, my immersion!"
Colors are now preserved for player bodygroups (i.e. lenses of goggles/glasses) between standing and ragdolled players.
*** "Watch your clearance."
You can no longer rise from crouching/proning (either to a risen state or proning-to-crouching) if there is not enough space for you to do so, which prevents you from getting stuck in map geometry.
*** "Gimme a damn second!"
Standing up from a fallen state now immobilizes you for the length of an animation that plays when you get up.

The animation that plays depends on the direction your body is facing; it takes longer to get up if you're lying on your front.

You can also not get up if your body is in motion. This effectively prevents the 'flying' exploit.
** <2024-09-14 Sat>
*** Bugfixes
Several of the little bastards were eliminated.
- Rendering of bodies was handled weirdly; the rest of the body other than the head/hands appeared rendered 'on top' of everything else.
- Death by high-speed impact with people or a wall would produce a mostly-invisible body.
- Some ~ACT~ events were playing their animation twice.
** <2024-09-12 Thu>
*** "Behold! The ROT!"
Behold works on bodies.

You can observe if they're alive or not.

It also tells you how horribly rotten it is.
*** "Good thing I can't read."
A new section was added to the home page at ~death.town/~corpse~ to refer to the game's control scheme.
*** "SORRY I FORGOT CAPS LOCK WAS ON"
Toggling caps lock in the chatter is functional again.
*** "I can't hear you from all the way down there."
Speech was broken while one was ragdolled. Now it isn't.
*** "Wanna see me run myself to death? Wanna see me do it again?"
Animations for different speeds of movement were fixed.

In addition, a separate animation exists for sprinting (as opposed to simply a light run).
*** "Fucking put me down NOW!"
You can now pick up and move bodies around if your hands are empty.

Simply left click on them, like you would do to pick up things.
*** "WHAM! CRASH!"
The bug where doors could fly off into space from being kicked, punched, or shoved was fixed.

After that the functionality for kicking doors open was re-implemented from Alchemy.
*** "Fresh meat!"
- Corpses can be butchered using any sharp weapon.
- Meat and bone can be harvested with a sharp attack.
- The results can be /ruined/.
  - Ruined products are less useful.
  - Currently based on a random chance.
  - Later on, success will be determined by skill.
- Butchery's returns depend on the state of the corpse.
  - Rotten corpses produce rotten meat.
  - Cremated bodies produce char.
  - Skeletons crumble into bones and disappear forever.
*** "BEHOLD!"
Press ~KEY_B~ to BEHOLD.

This lets you check what a thing is and whether or not a body is living.
*** "Wow, I can hold it in my second hand and drop it!"
Press ~KEY_R~ to swap items between your hands.

Probably in the future you would need to hold ~ALT~ when you press ~KEY_R~ to do this.

This feature is not meaningfully implemented for anything yet, but required for loading of firearms.

Attempting to drop items with something in your offhand but nothing in your primary hand will drop it from your offhand.
** <2024-09-11 Wed>
*** "Made you look."
~death.town/~corpse~ now displays the /Spleen/ font.
*** "You've met with a terrible fate, haven't you?"
~CASTE~ and ~FATE~ were created.

A ~CASTE~ represents a category of society; a ~FATE~ represents a class within that category.

The existing castes and fates are as follows:
- Scum
  - Laborer
  - Keeper
  - Stitcher
  - Psycher
  - Deadbeat
  - Foreman
  - Cook
- Sanitar Squad
  - Sanitar Scrub
  - Sanitar Sentry
  - Sanitar Savior
  - Sanitar Seeker
  - Sanitar Superior
- Overlords
  - Sekretar
  - Adjutant
  - Kommandant
*** "Hey everyone, look at me! I'm special!"
In the future, items will be what define your appearance. For now, however, they are set when you spawn as a particular fate like the old game.

So far the Kommandant and all of the Sanitars have defined appearances.
** <2024-09-09 Mon>
*** "This is the most uncomfortable chatbox I've ever used."
The ancient 'bubble' oriented system of character speech has been restored.

Conversation items that construct a timeline up-to-down in a corner of the screen for following who said what will come next.
*** Music
Like the old game, this one now plays music in the background.

In addition to the song name appearing in the console, the song's artist is written too.
*** ~FONT~
A MoonScript class now exists for definition of custom fonts.

Custom fonts on Garry's Mod are very strange on Linux; I was worried I might not figure it out, but it /should/ be functional on all systems.
*** ~EFFECT~
A MoonScript class now exists for definition of scripted effects.

Hopefully this will make it much easier for us to create custom particles and put them in all sorts of places.
** <2024-09-06 Fri>
*** /THE NEXT TEST/ - <2024-09-13 Fri>
By this time, we hope to have a unique mechanism for character speech, and firearms.
*** First deadline
Today a successful technological demonstration of Eclipse was held.

In that time, the remainder of our deadlined items were completed -- all of the features we wanted to implement were implemented and all of the bugs we were tracking were eliminated.
*** "Too fancy for your own good."
The bigger pages belonging to user =~corpse= (that includes the one you're reading) now have embeds that can be read by awful things like Discord.
** <2024-09-05 Thu>
*** "How does it taste, mother?!"
Items can now be swung as melee weapons.

It is trivial for us to create new implements by which players can murder other players using simple physics prop-appropriate models, for which there is no need to use a viewmodel.
*** "New blood makes it taste fresher."
For the first time in a long time, we have a new contributor to the code side of things.

Danku-chan, previously already having contributed to the project with her art, sound, and her conceptual mind, has taken the first steps (using Neovim) to create new objects within our game.

She is learning fast and Sotla is very proud of her.
*** "We've got deadlines, fuckface!"
We are becoming more familiar with Org Mode to make use of its agenda features, in order to keep track of what we need to do next, what we want to do, what we need to fix, when we need to do it, and so on.

For the first time in the nightmare's development history, we're scheduling things and setting deadlines. We're writing down bugs and remembering to fix them instead of forgetting them with "I'll do it later".
*** "Wow! I can pick it up and throw it!"
From the old Alchemy stuff again, the ability to manipulate the position of ingame objects returns.
- Simply dropping items makes them fall from your hand. Other gamemodes would spawn the item into thin air in front of your face.
- Placing items is possible by holding the keybind for dropping things and then left clicking someplace.
- Throwing items is possible by doing the same as placing items, but while also holding the right mouse button.
By doing this, you can actually set down an impact bomb without detonating it. It will still be armed and dangerous; take care not to let it roll and fall off of something.
*** "Wait, I can interact with it too?"
Basics of item interaction were implemented.
- Using an item with itself/on yourself: ~MOUSE_MIDDLE~.
- Using an item on something or someone else: click on them with the item in your hand.
*** "Choke on this!"
The first *real* items added to the game: /bombs./

So far these include timed, impact, and incendiary (impact) bombs.

There's lore where the incendiary bomb is concerned, but you can wait a bit longer to see that.
*** "Tastes like sadness."
Food was added next.
- Makes a lovely noise when you eat it.
- Can rot.

Danku-chan made a number of these new ones, as well as some junk items.
*** Technical stuff
Bugs concerning reposition of items when you drop/place them were fixed.

It's no longer necessary to manually require every file manually; entire directories can be specified instead.
*** Reflection
This is all starting to resemble a playable game at a surprisingly
fast rate. The majority of the important things outlined in this
changelog were accomplished in the last few days. Things that seemed
as though they should have taken much longer were wiped out in mere
hours.
* August 2024
** <2024-08-08 Thu>
*** "I forgot to update the changelog."
I'd rather not make an entry for every date so let me just list some additions.
- ~STATUS~
  - Stamina
  - Hunger
  - Thirst
  - Poison
- ~ACT~
  - A system for animated actions, one at a time.
  - Hand to hand combat; hold ~RMB~ to enter combat mode.
    - Punching
    - Kicking
    - Stomping
    - Shoving
    - Hard shoving
  - Press K to kough is an ACT.
- Corpses
  - Make noise as they decay (gurgle munch crunch)
  - Keep their clothing as they decay
- ~STATE~
  - Standing
  - Crouching
  - Crawling
* July 2024
** <2024-07-15 Mon>
*** "God damn it, I thought there were game changes in this one!"
There is now a [[file:lore.html][lore section]] on the [[file:index.html][main page]].
** <2024-07-13 Sat>
*** "He's rotting, you know."
- Corpses now decay over time through five stages:
  - Fresh
  - Bloat
  - Active Decay
  - Advanced Decay
  - Dry Remains
- Corpses which are not dry remains can be cremated.
*** "There was an automated update report for /this/?"
The styling was updated +a little bit+, once again.
** <2024-07-12 Fri>
*** "It's so unlike Source movement! I hate it!"
- Speed is no longer gained in an instant.
  - You must hold down ~SHIFT~ while moving /forward/ in order to gain momentum.
  - As a consequence, when initially beginning to run you might only lightly smack into a wall, not hard enough to knock you over or cause serious damage.
- Speed is also no longer lost in an instant.
  - Letting go of the movement control while moving faster than a walk's pace keeps you moving forward with your momentum.
  - As a consequence, failure to pace yourself can send you into a wall, off of a dangerous height, into other people. If you're lucky it might be even more fun than those things.
- The speed your character targets using ~SHIFT~ is tunable by scrolling the mouse wheel while holding ~SHIFT~.
  - Scrolling the mouse wheel up aims to go faster.
    A noise that plays each scroll of the wheel increases in pitch as your walking becomes running, and as your walking becomes a full sprint.
  - Scrolling the mouse wheel down aims to go slower.
    A noise that plays each scroll of the wheel decreases in pitch as your walking goes into a silent creeping motion.
  - ~SHIFT~ is necessary to move at a slower speed while standing and can be considered a general modifier key for movement speed, instead of just to move faster.
    This way, not pressing ~SHIFT~ always leads you to walk normally.
*** "Wow, that looks much nicer."
Not technically related to the game, but to this very changelog itself and all pages under [[https://death.town/~corpse][~corpse]].
- Correctly stored theme which should work regardless of ~http~ or ~https~.
- +Table of contents.+ Not anymore. There's a banner now, though.
- Omission of things like /authors/ and /timestamps/. Who needs all that?
- No more sequential numbering of items.
- New format grouping various 'articles' under the dates of destiny.

If you're any good at CSS* and would like to offer improvements to the style of these pages, please let us know.

*Not Counter-Strike Source.
*** "Ow, the consequences of my actions!"
- Our favorite feature makes a swift return; running into things hurts you.
  - Running into things fast enough knocks you over.
  - You can run into other people to knock them over.
- ~SOUND~ was ported from ~class-war~.
  - Defining sound scripts is now way easier.
  - Sounds declared this way will only need to be altered once to apply across the whole game.
  - This is the sort of dead simple convenience we neglected on the old game that made it become intolerable to continue working on it.
*** Sotla
~sotla.sh~ was written to automatically report when this file changes and is pushed to the server.
** <2024-07-10 Wed>
*** Corpse Collection
- Death no longer produces fake clientside-only ragdolls, but serverside ragdolls with proper collisions and behaviors.
- Damage to ragdolls is now applied to the players to whom the ragdolls belong, and ragdolls are now detached from a player when they respawn.
- Tumbling into other ragdolls is now less lethal. While this does technically make the game easier, it's far less broken this way.
*** Binding, Bodies
- ~BIND~ was ported from ~class-war~ and its first use case was in making ~KEY_T~ cause the player to tumble over when pressed.
- The first person camera now respects the entity considered to be the player's body, which is the ~Player~ itself if it does not have a ragdoll, or the ragdoll in question if it does.
** <2024-07-09 Tue>
*** Transmutation
- The first person view camera and crosshair from Alchemy was ported into Eclipse.
- ~PLYCLASS~ was created to make player class definition easier and more organized.
** <2024-07-06 Sat>
*** Beginning
- Eclipse is born. Again.
- A class ~MODULE~ is created in order to make organization and definition of hooks and other game behavior a lot easier for us.
